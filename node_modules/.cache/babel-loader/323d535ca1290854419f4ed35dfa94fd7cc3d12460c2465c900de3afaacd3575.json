{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilkedia/Code/nextdoor-memory-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateDeck = () => {\n  const contents = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  return [...contents, ...contents].sort(() => Math.random() - 0.5).map((content, index) => ({\n    id: index,\n    content,\n    isMatched: false\n  }));\n};\nconst App = () => {\n  _s();\n  const [deck, setDeck] = useState(generateDeck);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [highScore, setHighScore] = useState(JSON.parse(localStorage.getItem(\"highScore\")) || {\n    name: \"\",\n    attempts: Infinity\n  });\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      setAttempts(prev => prev + 1);\n      const [firstCard, secondCard] = flippedCards;\n      if (firstCard.content === secondCard.content) {\n        setDeck(prevDeck => prevDeck.map(card => card.content === firstCard.content ? {\n          ...card,\n          isMatched: true\n        } : card));\n        setMatchedPairs(prev => prev + 1);\n      }\n      setTimeout(() => setFlippedCards([]), 1000);\n    }\n  }, [flippedCards]);\n  useEffect(() => {\n    if (matchedPairs === deck.length / 2) {\n      if (attempts < highScore.attempts) {\n        const newHighScore = {\n          name,\n          attempts\n        };\n        setHighScore(newHighScore);\n        localStorage.setItem(\"highScore\", JSON.stringify(newHighScore));\n      }\n    }\n  }, [matchedPairs, deck.length, attempts, highScore.attempts, name]);\n  const handleCardClick = useCallback(card => {\n    if (flippedCards.length < 2 && !flippedCards.includes(card)) {\n      setFlippedCards(prev => [...prev, card]);\n    }\n  }, [flippedCards]);\n  const resetGame = () => {\n    setDeck(generateDeck());\n    setFlippedCards([]);\n    setMatchedPairs(0);\n    setAttempts(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nextdoor: Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Attempts: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"high-score\",\n      children: [\"High Score: \", highScore.name, \" - \", highScore.attempts, \" attempts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: deck.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onClick: handleCardClick,\n        isFlipped: flippedCards.includes(card) || card.isMatched\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), matchedPairs === deck.length / 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"win-message\",\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vIZ7hWm0nt4/1k0szi+SzaQFLPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Card","jsxDEV","_jsxDEV","generateDeck","contents","sort","Math","random","map","content","index","id","isMatched","App","_s","deck","setDeck","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","attempts","setAttempts","name","setName","highScore","setHighScore","JSON","parse","localStorage","getItem","Infinity","length","prev","firstCard","secondCard","prevDeck","card","setTimeout","newHighScore","setItem","stringify","handleCardClick","includes","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","isFlipped","_c","$RefreshReg$"],"sources":["/Users/nikhilkedia/Code/nextdoor-memory-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport \"./App.css\";\n\nconst generateDeck = () => {\n  const contents = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n  return [...contents, ...contents]\n    .sort(() => Math.random() - 0.5)\n    .map((content, index) => ({ id: index, content, isMatched: false }));\n};\n\nconst App = () => {\n  const [deck, setDeck] = useState(generateDeck);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [name, setName] = useState(\"\");\n  const [highScore, setHighScore] = useState(\n    JSON.parse(localStorage.getItem(\"highScore\")) || {\n      name: \"\",\n      attempts: Infinity,\n    }\n  );\n\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      setAttempts((prev) => prev + 1);\n      const [firstCard, secondCard] = flippedCards;\n      if (firstCard.content === secondCard.content) {\n        setDeck((prevDeck) =>\n          prevDeck.map((card) =>\n            card.content === firstCard.content\n              ? { ...card, isMatched: true }\n              : card\n          )\n        );\n        setMatchedPairs((prev) => prev + 1);\n      }\n      setTimeout(() => setFlippedCards([]), 1000);\n    }\n  }, [flippedCards]);\n\n  useEffect(() => {\n    if (matchedPairs === deck.length / 2) {\n      if (attempts < highScore.attempts) {\n        const newHighScore = { name, attempts };\n        setHighScore(newHighScore);\n        localStorage.setItem(\"highScore\", JSON.stringify(newHighScore));\n      }\n    }\n  }, [matchedPairs, deck.length, attempts, highScore.attempts, name]);\n\n  const handleCardClick = useCallback(\n    (card) => {\n      if (flippedCards.length < 2 && !flippedCards.includes(card)) {\n        setFlippedCards((prev) => [...prev, card]);\n      }\n    },\n    [flippedCards]\n  );\n\n  const resetGame = () => {\n    setDeck(generateDeck());\n    setFlippedCards([]);\n    setMatchedPairs(0);\n    setAttempts(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Nextdoor: Memory Game</h1>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className=\"score\">Attempts: {attempts}</div>\n      <div className=\"high-score\">\n        High Score: {highScore.name} - {highScore.attempts} attempts\n      </div>\n      <div className=\"board\">\n        {deck.map((card) => (\n          <Card\n            key={card.id}\n            card={card}\n            onClick={handleCardClick}\n            isFlipped={flippedCards.includes(card) || card.isMatched}\n          />\n        ))}\n      </div>\n      {matchedPairs === deck.length / 2 && (\n        <div className=\"win-message\">You Win!</div>\n      )}\n      <button className=\"reset-button\" onClick={resetGame}>\n        Reset Game\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}